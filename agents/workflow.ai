# Agent Task Delegation Guide

This guide helps delegate tasks to the most suitable AI agent for the job, based on the roles we've defined for the StackrTrackr project. By following this model, you can create a powerful assembly line for development: **Plan with Gemini, Build with GPT, and Refine with Claude.**

## ðŸ†• **UNIFIED WORKFLOW SYSTEM**
**For all task delegation (simple or complex), use:**
```
"Assign this task to [AGENT]: [DESCRIPTION]" - Direct assignment
"Create a multi-agent task for [TASK_NAME]" - Smart breakdown
```
**Complete system**: See `unified-workflow.ai` for full token-efficient workflow

## âš¡ **QUICK AGENT ASSIGNMENT**
- **GPT**: Simple utilities, event handling, basic features (15-25 min)
- **Gemini**: Testing, QA, security audits, memory management (15-30 min)  
- **Claude**: Complex refactoring, architecture, performance optimization (30-90 min)

--- Delegation Guide

This guide helps delegate tasks to the most suitable AI agent for the job, based on the roles we've defined for the StackTrackr project. By following this model, you can create a powerful assembly line for development: **Plan with Gemini, Build with GPT, and Refine with Claude.**

## ðŸ†• NEW: Multi-Agent Task System
**For complex tasks requiring multiple agents, use the trigger phrase:**
```
"Create a multi-agent task for [TASK_NAME]"
```
This will generate a complete task delegation system with individual assignments, coordination documents, and progress tracking. See `multi-agent-workflow-v2.ai` for full details.

---

### 1. Gemini (The Strategist & Guardian)
- **Primary Role**: Security Auditor & Roadmap Planner.
- **Delegate When You Need To**:
    - **Plan**: Ask for high-level plans, architectural suggestions, or step-by-step outlines for new features.
    - **Audit**: Request security analysis of code, especially concerning data handling and user input.
    - **Strategize**: Discuss the project roadmap, feature prioritization, and long-term goals.
- **Example Prompt**: *"@workspace Outline the steps and security considerations for adding a user authentication feature."*

---

### 2. GPT (The Builder & All-Rounder)
- **Primary Role**: Feature Implementation & General Development.
- **Delegate When You Need To**:
    - **Build**: Ask for new code to be written from scratch based on a plan or description.
    - **Implement**: Generate boilerplate HTML, CSS, or JavaScript for new components.
    - **Brainstorm**: Explore different coding approaches or solutions to a problem.
- **Example Prompt**: *"@workspace Based on the plan from Gemini, write the initial JavaScript functions for the authentication module."*

---

### 3. Claude (The Refiner & Scribe)
- **Primary Role**: Code Refactoring & Documentation Specialist.
- **Delegate When You Need To**:
    - **Refactor**: Submit existing code and ask for improvements in clarity, performance, or style.
    - **Document**: Generate or update JSDoc comments for functions and modules.
    - **Analyze**: Ask for explanations of complex code blocks or large files.
- **Example Prompt**: *"@workspace Please review this new authentication code, refactor it for clarity, and add detailed JSDoc comments."*

---

## ðŸ§  **AI Model Selection Logic**
To conserve usage limits and ensure efficiency, tasks are delegated to the most appropriate AI model based on the following criteria:

1. **Complexity**:
   - Low: Use GPT-4.1 or Claude 3.7.
   - Medium: Use GPT-4 or Claude 4.
   - High: Use GPT-5.

2. **Cost**:
   - Prioritize lower-cost models when task complexity allows.

3. **Quota**:
   - Ensure the selected model has sufficient quota remaining.

### Example Usage
```
"Assign this task to the best model: Implement fuzzy search algorithm"
```
This will automatically select the most suitable model based on the above criteria.
